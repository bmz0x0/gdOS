
; ------------------------------------------------
; CPU依存部
; ------------------------------------------------

		.CPU	300HA
		
		.EXPORT _knl_dis_int			; 割り込み禁止
		.EXPORT _knl_ena_int			; 割り込み許可
		.EXPORT _knl_cre_ctx			; 実行コンテキストの作成
		.EXPORT	_knl_swi_ctx			; 実行コンテキストの切替


; ------------------------------------------------
; 割り込み禁止
; void kernel_dis_int(void)
; ------------------------------------------------
_knl_dis_int:
		orc		#H'80, CCR				; 割り込み禁止
		rts


; ------------------------------------------------
; 割り込み許可
; void kernel_ena_int(void)
; ------------------------------------------------
_knl_ena_int:
		andc	#H'7F, CCR				; 割り込み許可
		rts


; ------------------------------------------------
; 実行コンテキストエントリーアドレス
; ------------------------------------------------
ctx_entry:
		mov.l	ER2, ER0				; 実行時パラメータを第一引数に設定
		jmp		@ER3					; 実行アドレスにジャンプ

; ------------------------------------------------
; 実行コンテキストの作成
; void kernel_cre_ctx(
;			TCTXB	*ctx,				; 作成するコンテキスト
;			VP		sp,					; スタックポインタ
;			void	(*task)(VP_INT),	; 実行アドレス
;			TCB		*tcb)				; タスクコントロールブロック)
; ------------------------------------------------
_knl_cre_ctx:
		mov.l	ER2, @-ER7
		mov.l	#ctx_entry, ER2			; 実行エントリーポイントの設定
		mov.l	ER2, @-ER1
		mov.l	@(12, ER7), ER2			; 実行時パラメータの取り出し
		mov.l	ER2, @-ER1				; 実行時パラメータ格納
		mov.l	@(8, ER7), ER2			; 実行アドレス取り出し
		mov.l	ER2, @-ER1				; 実行アドレスを格納(ER3の退避分)
		sub.l	#12, ER1				; ER4〜ER6 までの退避分
		mov.l	ER1, @(0, ER0)			; スタックポインタの格納
		mov.l	@ER7+, ER2
		rts


; ------------------------------------------------
; 実行コンテキストの切替
; void kernel_swi_ctx(
;			TCTXB	*pre_ctx,			; 現在のコンテキスト
;			TCTXB	*nxt_ctx)			; 切替後のコンテキスト
; ------------------------------------------------
_knl_swi_ctx:
		mov.l	ER2, @-ER7
		mov.l	ER3, @-ER7
		mov.l	ER4, @-ER7
		mov.l	ER5, @-ER7
		mov.l	ER6, @-ER7
		mov.l	ER7, @ER0				; スタックポインタ保存
		mov.l	@ER1, ER7				; スタックポインタ復帰
		mov.l	@ER7+, ER6
		mov.l	@ER7+, ER5
		mov.l	@ER7+, ER4
		mov.l	@ER7+, ER3
		mov.l	@ER7+, ER2
		rts								; スタックポインタのアドレスにジャンプ

		.END